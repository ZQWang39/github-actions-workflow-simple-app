name: Build and deploy an app to AKS

env:
  AZURE_CONTAINER_REGISTRY: "ziqiaksdemo"
  CONTAINER_NAME: "hello-world"
  RESOURCE_GROUP: "GitHub-actions-deploy-to-AKS"
  CLUSTER_NAME: "AKS-demo"
  DEPLOYMENT_MANIFEST_PATH: "kubernetes"

on:
  push:
    branches: ["master"]
  workflow_dispatch:


jobs:
  buildImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    environment: production
    steps:
      # Checks out the repository this file is in
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2.5.0
        
      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
        # Builds and pushes an image up to your Azure Container Registry
      - name: Build and push image to ACR
        run: |
          az acr build --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} .  

  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    environment: production
    needs: [buildImage]
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v3
      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'
          
      #Substitute environment variables in a file
      - name: envsubst-action
        uses: danielr1996/envsubst-action@1.1.0
        env:
          AZURE_CONTAINER_REGISTRY : ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
          CONTAINER_NAME : ${{ env.CONTAINER_NAME }}
          MONGODB_URI : ${{ secrets.MONGODB_URI }}
        with:
          # File to run substitutions on
          input: 
            ${{ env.DEPLOYMENT_MANIFEST_PATH }}/hello-world-deployment.yaml
          output: 
            hello-world-deployment.yaml
            
      # Deploys application based on given manifest file
      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: |
            hello-world-deployment.yaml
            ${{ env.DEPLOYMENT_MANIFEST_PATH }}/hello-world-service.yaml
          images: |
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}

